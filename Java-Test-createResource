import org.keycloak.admin.client.Keycloak;
import org.keycloak.admin.client.KeycloakBuilder;
import org.keycloak.representations.idm.ClientRepresentation;

public class KeycloakClient {

    public static void main(String[] args) {
        // Replace these values with your Keycloak admin credentials and server URL
        String serverUrl = "{add your server url}";
        String realm = "{your REALM}";
        String adminUsername = "xxxx";
        String adminPassword = "xxxx";

        // Create a Keycloak admin client
        Keycloak keycloak = KeycloakBuilder.builder()
                .serverUrl(serverUrl)
                .realm(realm)
                .username(adminUsername)
                .password(adminPassword)
                .clientId("{add your client name or client id}")
                .build();

        // Uncomment and run only one of the following methods based on your operation

        // Example: Create a new resource for the client
        // createResource(keycloak, "{your client name}", "new-resource-id");

        // Example: Update an existing resource for the client
        // updateResource(keycloak, "{your client name}", "existing-resource-id");

        // Example: Delete an existing resource for the client
        // deleteResource(keycloak, "{your client name}", "existing-resource-id");

        // Close the Keycloak admin client
        keycloak.close();
    }

    private static void createResource(Keycloak keycloak, String clientName, String resourceId) {
        // Create a new client representation
        ClientRepresentation clientRepresentation = keycloak.realm("{your REALM}").clients().get(clientName).toRepresentation();

        // Create a new resource representation
        // Modify resource attributes as needed
        // ...

        // Call the Keycloak Admin API to create the resource
        keycloak.realm("{your REALM}").clients().get(clientRepresentation.getId()).resources().create(resourceRepresentation);
        System.out.println("Resource created for client " + clientName + ": " + resourceId);
    }

    private static void updateResource(Keycloak keycloak, String clientName, String resourceId) {
        // Retrieve the existing resource representation
        ClientRepresentation clientRepresentation = keycloak.realm("{your REALM}").clients().get(clientName).toRepresentation();
        ResourceRepresentation resourceRepresentation = keycloak.realm("your-realm").clients().get(clientRepresentation.getId()).resources().get(resourceId).toRepresentation();

        // Update the resource representation as needed
        // resourceRepresentation.setSomeAttribute("updated-value");

        // Call the Keycloak Admin API to update the resource
        keycloak.realm("{your REALM}").clients().get(clientRepresentation.getId()).resources().get(resourceId).update(resourceRepresentation);
        System.out.println("Resource updated for client " + clientName + ": " + resourceId);
    }

    private static void deleteResource(Keycloak keycloak, String clientName, String resourceId) {
        // Retrieve the existing resource representation
        ClientRepresentation clientRepresentation = keycloak.realm("{your REALM}").clients().get(clientName).toRepresentation();

        // Call the Keycloak Admin API to delete the resource
        keycloak.realm("{your REALM}").clients().get(clientRepresentation.getId()).resources().get(resourceId).remove();
        System.out.println("Resource deleted for client " + clientName + ": " + resourceId);
    }
}
